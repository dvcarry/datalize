{"version":3,"sources":["components/Tables.js","config/api.js","pages/Main.js","hooks/useData.js","App.js","index.js"],"names":["columns","title","dataIndex","key","width","align","render","text","toLocaleString","style","color","fontWeight","Tables","data","filterHandler","useState","selectedRowKeys","setSelectedRowKeys","console","log","clickHandler","rowSelection","onChange","className","map","item","hasSelected","length","column","split","name","onClick","dataSource","axios","defaults","baseURL","api","filename","filter","post","Main","input","setInput","setData","setFilter","setFilename","loading","setLoading","newFilter","a","action","newFilters","newFiltersObject","value","index","tempFilters","valueItem","result","getDataByFilename","useData","propsCommon","info","file","status","response","message","error","saveHandler","idsJson","filters","fileName","date","year","getFullYear","month","getMonth","toString","day","getDate","formatData","Date","join","exportFromJSON","exportType","marginTop","spinning","keys","work","activeClass","to","spy","smooth","duration","icon","UploadOutlined","block","placeholder","e","target","type","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e5cb9f1.chunk.js","sourcesContent":["import { Table } from 'antd';\r\nimport { useState } from 'react';\r\nimport { Element, animateScroll as scroll } from 'react-scroll'\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: '–ó–Ω–∞—á–µ–Ω–∏–µ',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',\r\n        dataIndex: 'amount',\r\n        key: 'age',\r\n        width: 100,\r\n        align: 'center',\r\n        render: text => <span>{text.toLocaleString('ru')}</span>,\r\n    },\r\n    {\r\n        title: '–î–æ–ª—è',\r\n        dataIndex: 'percent',\r\n        key: 'percent',\r\n        width: 100,\r\n        align: 'center',\r\n        render: text => text > 5 ? <span style={{ color: 'green', fontWeight: 500 }}>{text}%</span> : <span>{text}%</span>,\r\n    },\r\n    // {\r\n    //     title: '–û–±—â–∞—è –¥–æ–ª—è',\r\n    //     dataIndex: 'initial',\r\n    //     key: 'initial',\r\n    //     width: 150,\r\n    //     align: 'center',\r\n    //     render: text => text > 5 ? <span style={{ color: 'green', fontWeight: 500 }}>{text}</span> : <span>{text}</span>,\r\n    // },\r\n\r\n];\r\n\r\nexport const Tables = ({ data, filterHandler }) => {\r\n\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n    console.log(\"üöÄ ~ file: Tables.js ~ line 42 ~ Tables ~ selectedRowKeys\", selectedRowKeys)\r\n\r\n    const clickHandler = () => {\r\n        filterHandler(selectedRowKeys)\r\n        setSelectedRowKeys([])\r\n    }\r\n    // const clickHandler = (value, column) => {\r\n    //     filterHandler({ column, value })\r\n    // }\r\n\r\n    const onSelectChange = (selectedRowKeys) => {\r\n        // console.log('selectedRowKeys changed: ', selectedRowKeys, column);\r\n        setSelectedRowKeys(selectedRowKeys);\r\n    };\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className='div'>\r\n            {\r\n                data.map(item => {\r\n\r\n                    const hasSelected = selectedRowKeys.length > 0 && item.column === selectedRowKeys[0].split(':')[0]\r\n\r\n                    return (\r\n                        <Element key={item.column} name={item.column} className=\"element\" >\r\n\r\n                            <div className='table'>\r\n                                <div className='table_header'>\r\n                                    <h3>{item.column}</h3>\r\n                                    <span className={!hasSelected ? 'hidden' : 'button'} onClick={clickHandler}>–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å</span>\r\n                                </div>\r\n                                <Table\r\n                                    dataSource={item.data}\r\n                                    columns={columns}\r\n                                    rowSelection={rowSelection}\r\n                                    // rowSelection={{        \r\n                                    //     selectedRowKeys,\r\n                                    //     onChange: selectedRowKeys => onSelectChange(selectedRowKeys, item.column)\r\n                                    // }}\r\n                                    // onRow={(record, rowIndex) => {\r\n                                    //     return {\r\n                                    //         onClick: event => clickHandler(event.target.innerText, item.column), // click row\r\n                                    //     };\r\n                                    // }}\r\n                                />\r\n                            </div>\r\n                        </Element>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:' + process.env.PORT;\r\naxios.defaults.baseURL = 'http://82.146.40.11:5000'\r\n// axios.defaults.baseURL = 'http://localhost:5016'\r\n\r\n\r\nexport const api = {\r\n    async setFilter(filename, filter) {\r\n        try {\r\n            const { data } = await axios.post('/api/files/filter', { filename, filter })\r\n            return data\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n    },\r\n    async saveFile(filename, filter) {\r\n        try {\r\n            const { data } = await axios.post('/api/files/export', { filename, filter })\r\n            return data\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n    },\r\n    async getFileByFilename(filename) {\r\n        try {\r\n            const { data } = await axios.post('/api/files/filename', { filename })\r\n            return data\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n    },\r\n}","import { Upload, message, Button, Spin, Input } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport { Link, animateScroll as scroll } from 'react-scroll'\r\nimport exportFromJSON from 'export-from-json'\r\n\r\nimport { Tables } from '../components/Tables';\r\nimport { useData } from '../hooks/useData';\r\nimport { api } from '../config/api';\r\n\r\nfunction formatData(date) {\r\n    const year = date.getFullYear()\r\n    let month = (date.getMonth() + 1).toString()\r\n    if (month.length === 1) {\r\n        month = '0' + month\r\n    }\r\n    let day = date.getDate().toString()\r\n    if (day.length === 1) {\r\n        day = '0' + day\r\n    }\r\n    return day + '-' + month + '-' + year\r\n}\r\n\r\n\r\nconst makeFilename = filters => {\r\n    const today = new Date()\r\n    const date = formatData(today)\r\n    const filterString = filters.map(item => `${item.column}-${item.value.join(',')}`).join('__')\r\n    const result = date + '__' + filterString\r\n    return result\r\n}\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const [clients, setClients] = useState(null)\r\n    const [input, setInput] = useState('')\r\n    const { data, filter, loading, setData, filterHandler, filename, setFilename, getDataByFilename } = useData()\r\n\r\n\r\n    const propsCommon = {\r\n        name: 'file',\r\n        action: '//82.146.40.11:5000/api/files',\r\n        // action: 'http://localhost:5016/api/files',\r\n        // headers: {\r\n        //   authorization: 'authorization-text',\r\n        // },\r\n        onChange(info) {\r\n            if (info.file.status !== 'uploading') {\r\n                // console.log('uploading', info.file)\r\n                // console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                // console.log('done', info.file)\r\n                setData(info.file.response.data)\r\n                setFilename(info.file.response.filename)\r\n                // message.success(`${info.file.name} file uploaded successfully`);\r\n            } else if (info.file.status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    };\r\n\r\n    const saveHandler = async () => {\r\n        const idsJson = await api.saveFile(filename, filter)\r\n        const fileName = makeFilename(filter)\r\n        const exportType = 'csv'\r\n        exportFromJSON({ data: idsJson.data, fileName, exportType })\r\n    }\r\n\r\n    // const propsUsers = {\r\n    //     name: 'file',\r\n    //     action: 'http://localhost:5016/api/files/users',\r\n    //     onChange(info) {\r\n    //         if (info.file.status !== 'uploading') {\r\n    //             console.log('uploading', info.file)\r\n    //             console.log(info.file, info.fileList);\r\n    //         }\r\n    //         if (info.file.status === 'done') {\r\n    //             console.log('done', info.file)\r\n    //             setData(info.file.response.data)\r\n    //             // setClients(info.file.response.data)\r\n    //             // message.success(`${info.file.name} file uploaded successfully`);\r\n    //         } else if (info.file.status === 'error') {\r\n    //             message.error(`${info.file.name} file upload failed.`);\r\n    //         }\r\n    //     },\r\n    // };\r\n\r\n    if (!data) {\r\n        return (\r\n            <div className='center'>\r\n                <div>\r\n                    <Upload {...propsCommon}>\r\n                        <Button icon={<UploadOutlined />} block>–ó–∞–≥—Ä—É–∑–∏ —Ñ–∞–π–ª —Å –æ–±—â–µ–π –±–∞–∑–æ–π</Button>\r\n                    </Upload>\r\n                </div>\r\n                <div className='file_input'>\r\n                    <Input placeholder=\"Basic usage\" onChange={(e) => setInput(e.target.value)}/>\r\n                    <Button type=\"primary\" block onClick={() => getDataByFilename(input)}>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</Button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='main'>\r\n            <div className='info div'>\r\n                {/* {\r\n                    !data\r\n                        ?\r\n                        <div style={{ marginBottom: '20px' }}>\r\n                            <h4>–í—Å—è –±–∞–∑–∞</h4>\r\n                            <Upload {...propsCommon}>\r\n                                <Button icon={<UploadOutlined />}>–û–±—â–∞—è –±–∞–∑–∞</Button>\r\n                            </Upload>\r\n                        </div>\r\n                        : null\r\n                } */}\r\n\r\n\r\n                {/* <div style={{ marginBottom: '20px' }}>\r\n                    <h4>–ù—É–∂–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç</h4>\r\n                    <Upload\r\n                        {...propsUsers}\r\n                        data={{ filename }}\r\n                    >\r\n                        <Button icon={<UploadOutlined />}>–ó–∞–≥—Ä—É–∑–∏—Ç—å</Button>\r\n                    </Upload>\r\n                </div> */}\r\n\r\n\r\n\r\n\r\n                <div className='stick'>\r\n                    {\r\n                        data\r\n                            ? <div className='red'>\r\n                                {data.length.toLocaleString('ru')}\r\n                                {\r\n                                    filter.length > 0\r\n                                        ? <span className='button' onClick={saveHandler}>&#128203;</span>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                            : null\r\n                    }\r\n                    {\r\n                        filter.length > 0\r\n                            ? <div style={{ marginTop: '20px' }}>\r\n                                <h4 style={{ marginTop: '20px' }}>–§–∏–ª—å—Ç—Ä—ã</h4>\r\n                                {\r\n                                    filter.map((item, index) => {\r\n                                        return item.value.map(valueItem => {\r\n                                            return (\r\n                                                <div key={`${item.column}-${valueItem}`} className='filter_item' onClick={() => filterHandler({ value: valueItem, column: item.column, index }, 'minus')}>\r\n                                                    {item.column}: {valueItem}\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            : null\r\n                    }\r\n\r\n                    <div >\r\n                        {\r\n                            <Spin spinning={loading}></Spin>\r\n                        }\r\n                    </div>\r\n                    <div className='block'>\r\n                        <h4>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏</h4>\r\n                        <ul className='items'>\r\n                            {\r\n                                data?.keys.work.map(item => (\r\n                                    <li key={item}>\r\n                                        <Link\r\n                                            activeClass=\"active\"\r\n                                            // className=\"test1\"\r\n                                            className={item}\r\n                                            to={item}\r\n                                            spy={true}\r\n                                            smooth={true}\r\n                                            duration={500}\r\n                                        >\r\n                                            {item}\r\n                                        </Link>\r\n                                    </li>\r\n                                    // <div>{item}</div>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <Upload {...propsClient}>\r\n                        <Button icon={<UploadOutlined />}>–ö–ª–∏–µ–Ω—Ç—ã</Button>\r\n                    </Upload>\r\n                </div> */}\r\n\r\n            </div>\r\n\r\n            {\r\n                data ? <Tables data={data.result} filterHandler={filterHandler} /> : null\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport { api } from '../config/api';\r\n\r\nexport const useData = () => {\r\n\r\n    const [data, setData] = useState(null)\r\n    const [filter, setFilter] = useState([])\r\n    const [filename, setFilename] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const filterHandler = async (newFilter, action = 'plus') => {\r\n\r\n        let newFilters = []\r\n\r\n        if (action === 'plus') {\r\n            const newFiltersObject = {\r\n                column: newFilter[0].split(':')[0],\r\n                value: newFilter.map(item => item.split(':')[1])\r\n            }\r\n            newFilters = [...filter, newFiltersObject]\r\n        } else {\r\n            const isExistedFilterHasOneValue = filter[newFilter.index].value.length === 1 ? true : false\r\n            if (isExistedFilterHasOneValue) {\r\n                newFilters = filter.filter(item => item.column !== newFilter.column)\r\n            } else {\r\n                const tempFilters = filter.map((item) => item.column === newFilter.column ? ({ ...item, value: item.value.filter(valueItem => valueItem !== newFilter.value) }) : item)\r\n                newFilters = tempFilters\r\n            }\r\n        }\r\n\r\n        setFilter(newFilters)\r\n        setLoading(true)\r\n        const result = await api.setFilter(filename, newFilters)\r\n        setData(result.data)\r\n        setLoading(false)\r\n    }\r\n\r\n    const getDataByFilename = async (filename) => {\r\n        setLoading(true)\r\n        const result = await api.getFileByFilename(filename)\r\n        setData(result.data)\r\n        setLoading(false)\r\n    }\r\n\r\n    return { data, setData, loading, filter, filterHandler, filename, setFilename, getDataByFilename }\r\n\r\n}","import './App.css';\nimport 'antd/dist/antd.css';\nimport { Main } from './pages/Main';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">      \n        <Main />      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}