{"version":3,"sources":["components/Tables.js","config/api.js","utils/utils.js","hooks/useLocalStorage.js","pages/Main.js","hooks/useData.js","App.js","index.js"],"names":["columns","title","dataIndex","key","width","align","render","text","toLocaleString","style","color","fontWeight","Tables","data","filterHandler","useState","selectedRowKeys","setSelectedRowKeys","clickHandler","rowSelection","onChange","className","map","item","hasSelected","length","column","split","name","onClick","dataSource","pagination","position","axios","defaults","baseURL","api","filename","filter","post","console","log","LOCALSTORAGE_NAME","useLocalStorage","files","setFiles","setToLocalStorage","storage","JSON","parse","localStorage","getItem","find","file","setItem","stringify","getFilesFromLocalStorage","Main","input","setInput","setData","setFilter","setFilename","loading","setLoading","error","setError","newFilter","a","action","newFilters","newFiltersObject","value","index","tempFilters","valueItem","result","getDataByFilename","response","status","saveFileHandler","idsJson","filters","fileName","date","year","getFullYear","month","getMonth","toString","day","getDate","formatData","Date","join","exportFromJSON","exportType","useData","useEffect","spinning","marginTop","keys","work","activeClass","to","spy","smooth","duration","placeholder","e","target","type","block","disabled","size","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2d8930af.chunk.js","sourcesContent":["import { Table } from 'antd';\r\nimport { useState } from 'react';\r\nimport { Element, animateScroll as scroll } from 'react-scroll'\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Значение',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Количество',\r\n        dataIndex: 'amount',\r\n        key: 'age',\r\n        width: 100,\r\n        align: 'center',\r\n        render: text => <span>{text.toLocaleString('ru')}</span>,\r\n    },\r\n    {\r\n        title: 'Доля',\r\n        dataIndex: 'percent',\r\n        key: 'percent',\r\n        width: 100,\r\n        align: 'center',\r\n        render: text => text > 5 ? <span style={{ color: 'green', fontWeight: 500 }}>{text}%</span> : <span>{text}%</span>,\r\n    },\r\n    // {\r\n    //     title: 'Общая доля',\r\n    //     dataIndex: 'initial',\r\n    //     key: 'initial',\r\n    //     width: 150,\r\n    //     align: 'center',\r\n    //     render: text => text > 5 ? <span style={{ color: 'green', fontWeight: 500 }}>{text}</span> : <span>{text}</span>,\r\n    // },\r\n\r\n];\r\n\r\nexport const Tables = ({ data, filterHandler }) => {\r\n\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n\r\n    const clickHandler = () => {\r\n        filterHandler(selectedRowKeys)\r\n        setSelectedRowKeys([])\r\n    }\r\n    // const clickHandler = (value, column) => {\r\n    //     filterHandler({ column, value })\r\n    // }\r\n\r\n    const onSelectChange = (selectedRowKeys) => {\r\n        setSelectedRowKeys(selectedRowKeys);\r\n    };\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className='div work'>\r\n            {\r\n                data.map(item => {\r\n\r\n                    const hasSelected = selectedRowKeys.length > 0 && item.column === selectedRowKeys[0].split(':')[0]\r\n\r\n                    return (\r\n                        <Element key={item.column} name={item.column} className=\"element\" >\r\n\r\n                            <div className='table'>\r\n                                <div className='table_header'>\r\n                                    <h3>{item.column}</h3>\r\n                                    <span className={!hasSelected ? 'hidden' : 'button button-red'} onClick={clickHandler}>Отфильтровать</span>\r\n                                </div>\r\n                                <Table\r\n                                    dataSource={item.data}\r\n                                    columns={columns}\r\n                                    rowSelection={rowSelection}\r\n                                    pagination={{ position: ['none'] }}\r\n                                    // rowSelection={{        \r\n                                    //     selectedRowKeys,\r\n                                    //     onChange: selectedRowKeys => onSelectChange(selectedRowKeys, item.column)\r\n                                    // }}\r\n                                    // onRow={(record, rowIndex) => {\r\n                                    //     return {\r\n                                    //         onClick: event => clickHandler(event.target.innerText, item.column), // click row\r\n                                    //     };\r\n                                    // }}\r\n                                />\r\n                            </div>\r\n                        </Element>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://82.146.40.11:5000'\r\n\r\n\r\nexport const api = {\r\n    async setFilter(filename, filter) {\r\n        try {\r\n            const { data } = await axios.post('/api/files/filter', { filename, filter })\r\n            return data\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n    },\r\n    async saveFile(filename, filter) {\r\n        try {\r\n            const { data } = await axios.post('/api/files/export', { filename, filter })\r\n            return data\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n    },\r\n    async getFileByFilename(filename) {\r\n        try {\r\n            const { data } = await axios.post('/api/files/filename', { filename })\r\n            return data\r\n        } catch (error) {\r\n            console.log('error', error)\r\n            return error\r\n        }\r\n    },\r\n}","function formatData(date) {\r\n    const year = date.getFullYear()\r\n    let month = (date.getMonth() + 1).toString()\r\n    if (month.length === 1) {\r\n        month = '0' + month\r\n    }\r\n    let day = date.getDate().toString()\r\n    if (day.length === 1) {\r\n        day = '0' + day\r\n    }\r\n    return day + '-' + month + '-' + year\r\n}\r\n\r\nexport const makeFilename = filters => {\r\n    const today = new Date()\r\n    const date = formatData(today)\r\n    const filterString = filters.map(item => `${item.column}-${item.value.join(',')}`).join('__')\r\n    const result = date + '__' + filterString\r\n    return result\r\n}","import { useState } from \"react\";\r\n\r\nconst LOCALSTORAGE_NAME = 'datalize'\r\n\r\nexport const useLocalStorage = () => {\r\n\r\n    const [files, setFiles] = useState([])\r\n\r\n    const setToLocalStorage = filename => {\r\n        const storage = JSON.parse(localStorage.getItem(LOCALSTORAGE_NAME));\r\n        if (!storage) {\r\n            localStorage.setItem(LOCALSTORAGE_NAME, JSON.stringify({ files: [filename] }));\r\n        } else {\r\n            const isFile = storage.files.find(file => filename === file)\r\n            if (!isFile) {\r\n                localStorage.setItem(LOCALSTORAGE_NAME, JSON.stringify({ files: [...storage.files, filename] }));\r\n            }\r\n        }\r\n    }\r\n\r\n    const getFilesFromLocalStorage = () => {\r\n        const storage = JSON.parse(localStorage.getItem(LOCALSTORAGE_NAME));\r\n        if (storage && storage.files) {\r\n            setFiles(storage.files)\r\n        }\r\n    }\r\n\r\n    return {\r\n        files,\r\n        setToLocalStorage,\r\n        getFilesFromLocalStorage\r\n    }\r\n}","import { Upload, message, Button, Spin, Input } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, animateScroll as scroll } from 'react-scroll'\r\n\r\nimport { Tables } from '../components/Tables';\r\nimport { useData } from '../hooks/useData';\r\nimport { getFilesFromLocalStorage } from '../utils/utils';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\n\r\n\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const [clients, setClients] = useState(null)\r\n    const [input, setInput] = useState('')\r\n\r\n    const { data, filter, loading, setData, filterHandler, filename, error, setFilename, getDataByFilename, saveFileHandler } = useData()\r\n    const { files, setToLocalStorage, getFilesFromLocalStorage } = useLocalStorage()\r\n\r\n    const propsCommon = {\r\n        name: 'file',\r\n        action: 'http://82.146.40.11:5000/api/files',\r\n        // headers: {\r\n        //   authorization: 'authorization-text',\r\n        // },\r\n        onChange(info) {\r\n            if (info.file.status !== 'uploading') {\r\n                // console.log('uploading', info.file)\r\n                // console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                // console.log('done', info.file)\r\n                setData(info.file.response.data)\r\n                setFilename(info.file.response.filename)\r\n                // message.success(`${info.file.name} file uploaded successfully`);\r\n            } else if (info.file.status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFilesFromLocalStorage()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    // const propsUsers = {\r\n    //     name: 'file',\r\n    //     action: 'http://localhost:5016/api/files/users',\r\n    //     onChange(info) {\r\n    //         if (info.file.status !== 'uploading') {\r\n    //             console.log('uploading', info.file)\r\n    //             console.log(info.file, info.fileList);\r\n    //         }\r\n    //         if (info.file.status === 'done') {\r\n    //             console.log('done', info.file)\r\n    //             setData(info.file.response.data)\r\n    //             // setClients(info.file.response.data)\r\n    //             // message.success(`${info.file.name} file uploaded successfully`);\r\n    //         } else if (info.file.status === 'error') {\r\n    //             message.error(`${info.file.name} file upload failed.`);\r\n    //         }\r\n    //     },\r\n    // };\r\n\r\n    if (!data) {\r\n        return (\r\n            <div className='center'>\r\n                {/* <div>\r\n                    <Upload {...propsCommon}>\r\n                        <Button icon={<UploadOutlined />} block>Загрузи файл с общей базой!</Button>\r\n                    </Upload>\r\n                </div> */}\r\n                <div className='file_input'>\r\n                    <Input placeholder=\"Пароли явки\" onChange={(e) => setInput(e.target.value)} />\r\n                    <div className='buttonblock'>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            block\r\n                            disabled={loading}\r\n                            onClick={() => getDataByFilename(input)}\r\n                        >\r\n                            Подтвердить\r\n                        </Button>\r\n                    </div>\r\n                    {\r\n                        error ? <div>{error}</div> : null\r\n                    }\r\n                    {\r\n                        files.length > 0\r\n                            ? <div>\r\n                                {\r\n                                    files.map(file => <div className='button' onClick={() => getDataByFilename(file)}>{file}</div>)\r\n                                }\r\n                            </div>\r\n                            : null\r\n                    }\r\n                    {\r\n                        <Spin spinning={loading} size=\"large\"></Spin>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='main'>\r\n            <div className='info div'>\r\n                <div className='stick'>\r\n                    {\r\n                        data\r\n                            ? <div className='red'>\r\n                                {data.length.toLocaleString('ru')}\r\n                                {\r\n                                    <Spin spinning={loading}></Spin>\r\n                                }\r\n                            </div>\r\n                            : null\r\n                    }\r\n                    {\r\n                        filter.length > 0\r\n                            ? <div style={{ marginTop: '20px' }}>\r\n                                <h4 style={{ marginTop: '20px' }}>ДЕЙСТВИЯ</h4>\r\n                                <div className='button' onClick={saveFileHandler}>Скачать юзеров</div>\r\n                                <div className='button' onClick={() => filterHandler([], 'reset')}>Сбросить все фильтры</div>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                    {\r\n                        filter.length > 0\r\n                            ? <div style={{ marginTop: '20px' }}>\r\n                                <h4 style={{ marginTop: '20px' }}>ФИЛЬТРЫ</h4>\r\n                                {\r\n                                    filter.map((item, index) => {\r\n                                        return item.value.map(valueItem => {\r\n                                            return (\r\n                                                <div key={`${item.column}-${valueItem}`} className='button' onClick={() => filterHandler({ value: valueItem, column: item.column, index }, 'minus')}>\r\n                                                    {item.column}: {valueItem}\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            : null\r\n                    }\r\n                    <div className='block'>\r\n                        <h4>ПОКАЗАТЕЛИ</h4>\r\n                        <ul className='items'>\r\n                            {\r\n                                data?.keys.work.map(item => (\r\n                                    <li key={item}>\r\n                                        <Link\r\n                                            activeClass=\"active\"\r\n                                            // className=\"test1\"\r\n                                            className={item}\r\n                                            to={item}\r\n                                            spy={true}\r\n                                            smooth={true}\r\n                                            duration={500}\r\n                                        >\r\n                                            {item}\r\n                                        </Link>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                data ? <Tables data={data.result} filterHandler={filterHandler} /> : null\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport exportFromJSON from 'export-from-json'\r\nimport { api } from '../config/api';\r\nimport { makeFilename } from '../utils/utils';\r\nimport { LOCALSTORAGE_NAME } from \"../config/constants\";\r\nimport { useLocalStorage } from './useLocalStorage'\r\n\r\n\r\n\r\nexport const useData = () => {\r\n\r\n    const [data, setData] = useState(null)\r\n    const [filter, setFilter] = useState([])\r\n    const [filename, setFilename] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const { files, setToLocalStorage, getFilesFromLocalStorage } = useLocalStorage()\r\n\r\n    const filterHandler = async (newFilter, action = 'plus') => {\r\n\r\n        if (loading) return\r\n\r\n        let newFilters = []\r\n\r\n        if (action === 'plus') {\r\n            const newFiltersObject = {\r\n                column: newFilter[0].split(':')[0],\r\n                value: newFilter.map(item => item.split(':')[1])\r\n            }\r\n            newFilters = [...filter, newFiltersObject]\r\n        } else if (action === 'minus') {\r\n            const isExistedFilterHasOneValue = filter[newFilter.index].value.length === 1 ? true : false\r\n            if (isExistedFilterHasOneValue) {\r\n                newFilters = filter.filter(item => item.column !== newFilter.column)\r\n            } else {\r\n                const tempFilters = filter.map((item) => item.column === newFilter.column ? ({ ...item, value: item.value.filter(valueItem => valueItem !== newFilter.value) }) : item)\r\n                newFilters = tempFilters\r\n            }\r\n        }\r\n\r\n        setFilter(newFilters)\r\n        setLoading(true)\r\n        const result = await api.setFilter(filename, newFilters)\r\n        setData(result.data)\r\n        setLoading(false)\r\n    }\r\n\r\n    const getDataByFilename = async (filename) => {\r\n        setError('')\r\n        setLoading(true)\r\n        const result = await api.getFileByFilename(filename)\r\n        console.log(\"🚀 ~ file: useData.js ~ line 53 ~ getDataByFilename ~ result\", result)\r\n        if (result.data) {\r\n            setToLocalStorage(filename)\r\n            setData(result.data)\r\n            setFilename(filename)\r\n            setLoading(false)\r\n        } else {\r\n            if (result.response.status === 400) {\r\n                console.log(result.response.data.error)\r\n                setError(result.response.data.error)\r\n                setLoading(false)\r\n            }\r\n        }             \r\n    }\r\n\r\n    const saveFileHandler = async () => {\r\n        setLoading(true)\r\n        const idsJson = await api.saveFile(filename, filter)\r\n        const fileName = makeFilename(filter)\r\n        const exportType = 'csv'\r\n        exportFromJSON({ data: idsJson.data, fileName, exportType })\r\n        setLoading(false)\r\n    }\r\n\r\n    return { data, setData, loading, filter, filterHandler, filename, setFilename, getDataByFilename, saveFileHandler, error }\r\n\r\n}","import './App.css';\nimport 'antd/dist/antd.css';\nimport { Main } from './pages/Main';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">      \n        <Main />      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}